# discord_bot.py - —Å –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–º–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏

import os
import asyncio
import aiohttp
import json
import re
from typing import Optional

try:
    import discord
    from discord.ext import commands
    from discord import app_commands
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ discord: {e}")
    print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è: pip install discord.py")
    exit(1)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
DISCORD_TOKEN = ''
BOT_PREFIX = os.getenv('BOT_PREFIX', '!')
API_SECRET = os.getenv('API_SECRET', 'default_secret')
API_BASE_URL = os.getenv('API_BASE_URL', 'http://localhost:5000')

class MinecraftBot(commands.Bot):
    def __init__(self):
        intents = discord.Intents.default()
        intents.message_content = True
        
        super().__init__(
            command_prefix=commands.when_mentioned_or(BOT_PREFIX),
            intents=intents,
            help_command=None
        )
        
        # –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        self.setup_sessions = {}
        self.plugin_sessions = {}

    async def setup_hook(self):
        """–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ"""
        try:
            # –Ø–≤–Ω–æ –¥–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—ã –≤ –¥–µ—Ä–µ–≤–æ –∫–æ–º–∞–Ω–¥
            self.tree.add_command(ServerStatusCommand())
            self.tree.add_command(ServerStartCommand())
            self.tree.add_command(ServerStopCommand())
            self.tree.add_command(ServerRestartCommand())
            self.tree.add_command(ServerListCommand())
            self.tree.add_command(ServerLogsCommand())
            self.tree.add_command(ServerCommandCommand())
            self.tree.add_command(ServerCreateCommand())
            self.tree.add_command(HelpCommand())
            self.tree.add_command(ServerPluginsCommand())
            self.tree.add_command(ServerInstallPluginCommand())
            self.tree.add_command(ServerRemovePluginCommand())
            self.tree.add_command(ServerPluginFromURLCommand())
            
            # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã
            synced = await self.tree.sync()
            print(f"‚úÖ Slash-–∫–æ–º–∞–Ω–¥—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã: {len(synced)} –∫–æ–º–∞–Ω–¥")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥: {e}")
        
    async def on_ready(self):
        print(f'‚úÖ –ë–æ—Ç –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∫–∞–∫ {self.user} (ID: {self.user.id})')
        print(f'‚úÖ –ü—Ä–µ—Ñ–∏–∫—Å –∫–æ–º–∞–Ω–¥: {BOT_PREFIX}')
        print('------')
        
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞
        activity = discord.Activity(type=discord.ActivityType.watching, name="Minecraft —Å–µ—Ä–≤–µ—Ä—ã")
        await self.change_presence(activity=activity)

    async def api_request(self, endpoint: str, method: str = 'GET', data: dict = None):
        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è API –∑–∞–ø—Ä–æ—Å–æ–≤"""
        url = f"{API_BASE_URL}{endpoint}"
        headers = {"X-API-Key": API_SECRET, "Content-Type": "application/json"}
        
        try:
            async with aiohttp.ClientSession() as session:
                if method.upper() == 'GET':
                    async with session.get(url, headers=headers, timeout=10) as response:
                        return await response.json(), response.status
                elif method.upper() == 'POST':
                    async with session.post(url, headers=headers, json=data, timeout=10) as response:
                        return await response.json(), response.status
        except aiohttp.ClientError as e:
            return {"error": f"Network error: {str(e)}"}, 500
        except asyncio.TimeoutError:
            return {"error": "Request timeout"}, 500
        except Exception as e:
            return {"error": f"Unexpected error: {str(e)}"}, 500

    async def api_upload(self, endpoint: str, file_data: dict):
        """–ú–µ—Ç–æ–¥ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤ —á–µ—Ä–µ–∑ API"""
        url = f"{API_BASE_URL}{endpoint}"
        headers = {"X-API-Key": API_SECRET}
        
        try:
            async with aiohttp.ClientSession() as session:
                data = aiohttp.FormData()
                data.add_field('file', file_data['bytes'], filename=file_data['filename'])
                if 'path' in file_data:
                    data.add_field('path', file_data['path'])
                
                async with session.post(url, headers=headers, data=data) as response:
                    return await response.json(), response.status
        except aiohttp.ClientError as e:
            return {"error": f"Network error: {str(e)}"}, 500
        except asyncio.TimeoutError:
            return {"error": "Request timeout"}, 500
        except Exception as e:
            return {"error": f"Unexpected error: {str(e)}"}, 500

    async def download_file(self, url: str):
        """–°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –ø–æ URL"""
        try:
            async with aiohttp.ClientSession() as session:
                async with session.get(url) as response:
                    if response.status == 200:
                        filename = url.split('/')[-1]
                        content = await response.read()
                        return filename, content
                    else:
                        return None, None
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞: {e}")
            return None, None

    # –¢–ï–ö–°–¢–û–í–´–ï –ö–û–ú–ê–ù–î–´ –î–õ–Ø –ü–õ–ê–ì–ò–ù–û–í
    @commands.command(name='server_plugins')
    async def server_plugins_text(self, ctx, port: int):
        """–¢–µ–∫—Å—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–∫–∞–∑–∞ –ø–ª–∞–≥–∏–Ω–æ–≤"""
        async with ctx.typing():
            data, status = await self.api_request(f"/api/server/status/{port}")
            
            if status != 200:
                await ctx.send(f"‚ùå –°–µ—Ä–≤–µ—Ä –Ω–∞ –ø–æ—Ä—Ç—É {port} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return
                
            server_type = data.get('server_type', 'vanilla')
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–∞–ø–∫—É —Å –ø–ª–∞–≥–∏–Ω–∞–º–∏/–º–æ–¥–∞–º–∏
            if server_type in ['paper', 'purpur']:
                folder = 'plugins'
            elif server_type == 'fabric':
                folder = 'mods'
            else:
                folder = 'plugins'
                
            # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
            files_data, files_status = await self.api_request(f"/server_files/{port}?path={folder}")
            
            if files_status != 200:
                await ctx.send(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–ª–∞–≥–∏–Ω–æ–≤: {files_data.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
                return
                
            files = files_data.get('files', [])
            jar_files = [f for f in files if f['name'].lower().endswith('.jar')]
            
            if not jar_files:
                embed = discord.Embed(
                    title=f"üì¶ –ü–ª–∞–≥–∏–Ω—ã/–º–æ–¥—ã —Å–µ—Ä–≤–µ—Ä–∞ {port}",
                    description=f"–í –ø–∞–ø–∫–µ `{folder}` –Ω–µ—Ç JAR-—Ñ–∞–π–ª–æ–≤",
                    color=discord.Color.blue()
                )
                await ctx.send(embed=embed)
                return
                
            embed = discord.Embed(
                title=f"üì¶ –ü–ª–∞–≥–∏–Ω—ã/–º–æ–¥—ã —Å–µ—Ä–≤–µ—Ä–∞ {port}",
                description=f"–ù–∞–π–¥–µ–Ω–æ {len(jar_files)} JAR-—Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ `{folder}`",
                color=discord.Color.blue()
            )
            
            # –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ –≥—Ä—É–ø–ø—ã –ø–æ 10 —Ñ–∞–π–ª–æ–≤
            for i in range(0, len(jar_files), 10):
                group = jar_files[i:i+10]
                files_list = "\n".join([f"‚Ä¢ `{f['name']}` ({f['size'] // 1024} KB)" for f in group])
                embed.add_field(
                    name=f"–§–∞–π–ª—ã {i//10 + 1}",
                    value=files_list if files_list else "–ù–µ—Ç —Ñ–∞–π–ª–æ–≤",
                    inline=False
                )
                
            await ctx.send(embed=embed)

    @commands.command(name='server_install_plugin')
    async def server_install_plugin_text(self, ctx, port: int):
        """–¢–µ–∫—Å—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–ª–∞–≥–∏–Ω–∞"""
        user_id = ctx.author.id
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞
        server_data, status = await self.api_request(f"/api/server/status/{port}")
        if status != 200:
            await ctx.send(f"‚ùå –°–µ—Ä–≤–µ—Ä –Ω–∞ –ø–æ—Ä—Ç—É {port} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞ –ª–∏ —É–∂–µ —Å–µ—Å—Å–∏—è
        if user_id in self.plugin_sessions:
            await ctx.send("‚ùå –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è —Å–µ—Å—Å–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏. –ó–∞–≤–µ—Ä—à–∏—Ç–µ –µ—ë —Å–Ω–∞—á–∞–ª–∞.")
            return
            
        # –ù–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é
        self.plugin_sessions[user_id] = {
            'step': 1,
            'port': port,
            'server_type': server_data.get('server_type', 'vanilla'),
            'filename': None,
            'file_content': None,
            'folder': None
        }
        
        embed = discord.Embed(
            title="üîå –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–ª–∞–≥–∏–Ω–∞/–º–æ–¥–∞",
            description=(
                f"**–°–µ—Ä–≤–µ—Ä:** –ø–æ—Ä—Ç {port}\n"
                f"**–¢–∏–ø:** {server_data.get('server_type', 'vanilla')}\n\n"
                "**–®–∞–≥ 1/2:** –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ JAR-—Ñ–∞–π–ª –ø–ª–∞–≥–∏–Ω–∞/–º–æ–¥–∞ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ URL —Å–∫–∞—á–∏–≤–∞–Ω–∏—è:\n"
                "(–∏–ª–∏ –ø—Ä—è–º–æ–π URL –∫ JAR-—Ñ–∞–π–ª—É)"
            ),
            color=discord.Color.blue()
        )
        embed.set_footer(text="–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–∞–π–ª –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ URL. –î–ª—è –æ—Ç–º–µ–Ω—ã –≤–≤–µ–¥–∏—Ç–µ '–æ—Ç–º–µ–Ω–∞'")
        
        await ctx.send(embed=embed)

    @commands.command(name='server_remove_plugin')
    async def server_remove_plugin_text(self, ctx, port: int, filename: str):
        """–¢–µ–∫—Å—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–ª–∞–≥–∏–Ω–∞"""
        async with ctx.typing():
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ä–≤–µ—Ä–µ
            server_data, status = await self.api_request(f"/api/server/status/{port}")
            if status != 200:
                await ctx.send(f"‚ùå –°–µ—Ä–≤–µ—Ä –Ω–∞ –ø–æ—Ä—Ç—É {port} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return
                
            server_type = server_data.get('server_type', 'vanilla')
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–∞–ø–∫—É —Å –ø–ª–∞–≥–∏–Ω–∞–º–∏/–º–æ–¥–∞–º–∏
            if server_type in ['paper', 'purpur']:
                folder = 'plugins'
            elif server_type == 'fabric':
                folder = 'mods'
            else:
                folder = 'plugins'
                
            # –§–æ—Ä–º–∏—Ä—É–µ–º –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
            file_path = f"{folder}/{filename}"
            if not file_path.endswith('.jar'):
                file_path += '.jar'
                
            # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª
            delete_data = {'path': file_path}
            result, delete_status = await self.api_request(f"/server_files/{port}/delete", "POST", delete_data)
            
            if delete_status == 200:
                embed = discord.Embed(
                    title="‚úÖ –ü–ª–∞–≥–∏–Ω/–º–æ–¥ —É–¥–∞–ª–µ–Ω",
                    description=f"–§–∞–π–ª `{filename}` —É–¥–∞–ª–µ–Ω —Å —Å–µ—Ä–≤–µ—Ä–∞ {port}",
                    color=discord.Color.green()
                )
                await ctx.send(embed=embed)
            else:
                await ctx.send(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: {result.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")

    @commands.command(name='server_plugin_url')
    async def server_plugin_url_text(self, ctx, port: int, url: str):
        """–¢–µ–∫—Å—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–ª–∞–≥–∏–Ω–∞ –ø–æ –ø—Ä—è–º–æ–π —Å—Å—ã–ª–∫–µ"""
        async with ctx.typing():
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞
            server_data, status = await self.api_request(f"/api/server/status/{port}")
            if status != 200:
                await ctx.send(f"‚ùå –°–µ—Ä–≤–µ—Ä –Ω–∞ –ø–æ—Ä—Ç—É {port} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return
                
            # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
            filename, file_content = await self.download_file(url)
            
            if not filename or not file_content:
                await ctx.send("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ URL –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
                return
                
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–∞–ø–∫—É –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
            server_type = server_data.get('server_type', 'vanilla')
            if server_type in ['paper', 'purpur']:
                folder = 'plugins'
            elif server_type == 'fabric':
                folder = 'mods'
            else:
                folder = 'plugins'
                
            # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª –Ω–∞ —Å–µ—Ä–≤–µ—Ä
            file_data = {
                'bytes': file_content,
                'filename': filename,
                'path': folder
            }
            
            result, upload_status = await self.api_upload(f"/server_files/{port}/upload", file_data)
            
            if upload_status == 200:
                embed = discord.Embed(
                    title="‚úÖ –ü–ª–∞–≥–∏–Ω/–º–æ–¥ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!",
                    description=(
                        f"**–§–∞–π–ª:** {filename}\n"
                        f"**–°–µ—Ä–≤–µ—Ä:** –ø–æ—Ä—Ç {port}\n"
                        f"**–ü–∞–ø–∫–∞:** {folder}\n\n"
                        "–î–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞."
                    ),
                    color=discord.Color.green()
                )
                await ctx.send(embed=embed)
            else:
                await ctx.send(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: {result.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")

    @commands.command(name='plugins_help')
    async def plugins_help_text(self, ctx):
        """–¢–µ–∫—Å—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ —Å–ø—Ä–∞–≤–∫–∏ –ø–æ –ø–ª–∞–≥–∏–Ω–∞–º"""
        embed = discord.Embed(
            title="üîå –ü–æ–º–æ—â—å –ø–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –ø–ª–∞–≥–∏–Ω–∞–º–∏/–º–æ–¥–∞–º–∏",
            description="–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã:",
            color=discord.Color.blue()
        )
        
        commands_list = [
            (f"{BOT_PREFIX}server_plugins <port>", "–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø–ª–∞–≥–∏–Ω–æ–≤/–º–æ–¥–æ–≤ —Å–µ—Ä–≤–µ—Ä–∞"),
            (f"{BOT_PREFIX}server_install_plugin <port>", "–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–ª–∞–≥–∏–Ω–∞/–º–æ–¥–∞"),
            (f"{BOT_PREFIX}server_plugin_url <port> <url>", "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–ª–∞–≥–∏–Ω/–º–æ–¥ –ø–æ –ø—Ä—è–º–æ–π —Å—Å—ã–ª–∫–µ"),
            (f"{BOT_PREFIX}server_remove_plugin <port> <filename>", "–£–¥–∞–ª–∏—Ç—å –ø–ª–∞–≥–∏–Ω/–º–æ–¥ —Å —Å–µ—Ä–≤–µ—Ä–∞"),
            (f"{BOT_PREFIX}plugins_help", "–ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É")
        ]
        
        for cmd, desc in commands_list:
            embed.add_field(name=cmd, value=desc, inline=False)
            
        await ctx.send(embed=embed)

    async def handle_setup_message(self, message: discord.Message):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
        user_id = message.author.id
        
        if user_id not in self.setup_sessions:
            return False
            
        session = self.setup_sessions[user_id]
        content = message.content.strip()
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—Ç–º–µ–Ω—É
        if content.lower() in ['–æ—Ç–º–µ–Ω–∞', 'cancel', 'stop']:
            del self.setup_sessions[user_id]
            await message.channel.send("‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.")
            return True
            
        try:
            if session['step'] == 1:
                # –®–∞–≥ 1: –ü–æ—Ä—Ç
                try:
                    port = int(content)
                    if port < 25565 or port > 26000:
                        await message.channel.send("‚ùå –ü–æ—Ä—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ 25565-26000")
                        return True
                        
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–≤–æ–±–æ–¥–µ–Ω –ª–∏ –ø–æ—Ä—Ç
                    data, status = await self.api_request(f"/api/server/status/{port}")
                    if status == 200:
                        await message.channel.send("‚ùå –≠—Ç–æ—Ç –ø–æ—Ä—Ç —É–∂–µ –∑–∞–Ω—è—Ç –¥—Ä—É–≥–∏–º —Å–µ—Ä–≤–µ—Ä–æ–º")
                        return True
                        
                    session['port'] = port
                    session['step'] = 2
                    
                    embed = discord.Embed(
                        title="üéÆ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ Minecraft —Å–µ—Ä–≤–µ—Ä–∞",
                        description=(
                            f"‚úÖ –ü–æ—Ä—Ç: {port}\n\n"
                            "**–®–∞–≥ 2/4:** –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Å–µ—Ä–≤–µ—Ä–∞:\n"
                            "‚Ä¢ `vanilla` - –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä Mojang\n"
                            "‚Ä¢ `paper` - –í—ã—Å–æ–∫–æ–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω—ã–π —Ñ–æ—Ä–∫ Spigot\n"
                            "‚Ä¢ `purpur` - –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–æ—Ä–∫ Paper\n"
                            "‚Ä¢ `fabric` - –õ–µ–≥–∫–æ–≤–µ—Å–Ω–∞—è –º–æ–¥–æ–≤–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞\n"
                            "‚Ä¢ `mrpack` - Modrinth –º–æ–¥–ø–∞–∫"
                        ),
                        color=discord.Color.blue()
                    )
                    await message.channel.send(embed=embed)
                    return True
                    
                except ValueError:
                    await message.channel.send("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –ø–æ—Ä—Ç–∞. –£–∫–∞–∂–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 25565 –¥–æ 26000")
                    return True
                    
            elif session['step'] == 2:
                # –®–∞–≥ 2: –¢–∏–ø —Å–µ—Ä–≤–µ—Ä–∞
                server_type = content.lower()
                valid_types = ['vanilla', 'paper', 'purpur', 'fabric', 'mrpack']
                
                if server_type not in valid_types:
                    await message.channel.send(
                        "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —Å–µ—Ä–≤–µ—Ä–∞. –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–∏–ø—ã: `vanilla`, `paper`, `purpur`, `fabric`, `mrpack`"
                    )
                    return True
                    
                session['server_type'] = server_type
                session['step'] = 3
                
                if server_type == 'mrpack':
                    # –î–ª—è mrpack –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
                    embed = discord.Embed(
                        title="üéÆ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ Minecraft —Å–µ—Ä–≤–µ—Ä–∞",
                        description=(
                            f"‚úÖ –ü–æ—Ä—Ç: {session['port']}\n"
                            f"‚úÖ –¢–∏–ø: {server_type}\n\n"
                            "**–®–∞–≥ 3/4:** –î–ª—è –º–æ–¥–ø–∞–∫–æ–≤ —É–∫–∞–∂–∏—Ç–µ:\n"
                            "‚Ä¢ `uploaded:[your-file-uuid].mrpack` - –¥–ª—è –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ (–∑–∞–º–µ–Ω–∏—Ç–µ [your-file-uuid] –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π ID —Ñ–∞–π–ª–∞, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∏–ª–∏ API)\n"
                            "‚Ä¢ `modpack_id:version` - –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–æ ID\n"
                            "‚Ä¢ `modpack_id` - –¥–ª—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏\n\n"
                            "–ü—Ä–∏–º–µ—Ä—ã:\n"
                            "‚Ä¢ `uploaded:abcdef12-3456-7890-abcd-ef1234567890.mrpack` (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π UUID)\n"
                            "‚Ä¢ `fabulous-fabric-5:2.0.1`\n"
                            "‚Ä¢ `bewitchment`\n\n"
                            "**–í–∞–∂–Ω–æ:** –î–ª—è uploaded –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ—á–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –≤–æ–∑–≤—Ä–∞—â–µ–Ω–Ω–æ–µ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞! –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω, —Å–Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –µ–≥–æ —á–µ—Ä–µ–∑ /upload_mrpack."
                        ),
                        color=discord.Color.blue()
                    )
                else:
                    embed = discord.Embed(
                        title="üéÆ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ Minecraft —Å–µ—Ä–≤–µ—Ä–∞",
                        description=(
                            f"‚úÖ –ü–æ—Ä—Ç: {session['port']}\n"
                            f"‚úÖ –¢–∏–ø: {server_type}\n\n"
                            "**–®–∞–≥ 3/4:** –£–∫–∞–∂–∏—Ç–µ –≤–µ—Ä—Å–∏—é Minecraft (–Ω–∞–ø—Ä–∏–º–µ—Ä: `1.20.1`):"
                        ),
                        color=discord.Color.blue()
                    )
                await message.channel.send(embed=embed)
                return True
                
            elif session['step'] == 3:
                # –®–∞–≥ 3: –í–µ—Ä—Å–∏—è
                version = content.strip()
                
                if not version:
                    await message.channel.send("‚ùå –£–∫–∞–∂–∏—Ç–µ –≤–µ—Ä—Å–∏—é —Å–µ—Ä–≤–µ—Ä–∞")
                    return True
                    
                session['version'] = version
                session['step'] = 4
                
                embed = discord.Embed(
                    title="üéÆ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ Minecraft —Å–µ—Ä–≤–µ—Ä–∞",
                    description=(
                        f"‚úÖ –ü–æ—Ä—Ç: {session['port']}\n"
                        f"‚úÖ –¢–∏–ø: {session['server_type']}\n"
                        f"‚úÖ –í–µ—Ä—Å–∏—è: {version}\n\n"
                        "**–®–∞–≥ 4/4:** –£–∫–∞–∂–∏—Ç–µ –æ–±—ä–µ–º –ø–∞–º—è—Ç–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä: `4G` –∏–ª–∏ `2048M`):"
                    ),
                    color=discord.Color.blue()
                )
                await message.channel.send(embed=embed)
                return True
                
            elif session['step'] == 4:
                # –®–∞–≥ 4: –ü–∞–º—è—Ç—å
                memory = content.strip()
                if not re.match(r'^\d+[MG]$', memory):
                    await message.channel.send("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –ø–∞–º—è—Ç–∏. –ü—Ä–∏–º–µ—Ä—ã: `4G`, `2048M`")
                    return True
                    
                session['memory'] = memory
                
                # –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–µ—Ä
                create_data = {
                    'port': session['port'],
                    'version': session['version'],
                    'server_type': session['server_type'],
                    'memory': memory,
                    'auto_start': True
                }
                
                result, status = await self.api_request("/create_server", "POST", create_data)
                
                if status == 200:
                    embed = discord.Embed(
                        title="‚úÖ –°–µ—Ä–≤–µ—Ä —Å–æ–∑–¥–∞–Ω!",
                        description=(
                            f"**–ü–æ—Ä—Ç:** {session['port']}\n"
                            f"**–¢–∏–ø:** {session['server_type']}\n"
                            f"**–í–µ—Ä—Å–∏—è:** {session['version']}\n"
                            f"**–ü–∞–º—è—Ç—å:** {memory}\n\n"
                            "–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏!"
                        ),
                        color=discord.Color.green()
                    )
                else:
                    embed = discord.Embed(
                        title="‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞",
                        description=f"–û—à–∏–±–∫–∞: {result.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}",
                        color=discord.Color.red()
                    )
                
                await message.channel.send(embed=embed)
                del self.setup_sessions[user_id]
                return True
                
        except Exception as e:
            await message.channel.send(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")
            del self.setup_sessions[user_id]
            return True

    async def on_message(self, message: discord.Message):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
        if message.author.bot:
            return
            
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞
        if await self.handle_setup_message(message):
            return
            
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–ª–∞–≥–∏–Ω–æ–≤
        user_id = message.author.id
        if user_id in self.plugin_sessions:
            session = self.plugin_sessions[user_id]
            
            if message.content.lower() in ['–æ—Ç–º–µ–Ω–∞', 'cancel', 'stop']:
                del self.plugin_sessions[user_id]
                await message.channel.send("‚ùå –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–ª–∞–≥–∏–Ω–∞/–º–æ–¥–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.")
                return
                
            if session['step'] == 1:
                url = message.content.strip()
                attachments = message.attachments
                
                if attachments:
                    # –ï—Å–ª–∏ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω —Ñ–∞–π–ª
                    attachment = attachments[0]
                    if not attachment.filename.lower().endswith('.jar'):
                        await message.channel.send("‚ùå –§–∞–π–ª –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ JAR")
                        del self.plugin_sessions[user_id]
                        return
                        
                    session['filename'] = attachment.filename
                    session['file_content'] = await attachment.read()
                    session['step'] = 2
                    
                    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–∞–ø–∫—É –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
                    if session['server_type'] in ['paper', 'purpur']:
                        session['folder'] = 'plugins'
                    elif session['server_type'] == 'fabric':
                        session['folder'] = 'mods'
                    else:
                        session['folder'] = 'plugins'
                    
                    embed = discord.Embed(
                        title="üîå –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–ª–∞–≥–∏–Ω–∞/–º–æ–¥–∞",
                        description=(
                            f"**–°–µ—Ä–≤–µ—Ä:** –ø–æ—Ä—Ç {session['port']}\n"
                            f"**–§–∞–π–ª:** {session['filename']}\n"
                            f"**–ü–∞–ø–∫–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è:** {session['folder']}\n\n"
                            "**–®–∞–≥ 2/2:** –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ '–æ—Ç–º–µ–Ω–∞'"
                        ),
                        color=discord.Color.blue()
                    )
                    await message.channel.send(embed=embed)
                    return
                    
                elif url:
                    # –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω URL
                    filename, file_content = await self.download_file(url)
                    
                    if not filename or not file_content:
                        await message.channel.send("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ URL –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
                        del self.plugin_sessions[user_id]
                        return
                        
                    if not filename.lower().endswith('.jar'):
                        await message.channel.send("‚ùå –§–∞–π–ª –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ JAR")
                        del self.plugin_sessions[user_id]
                        return
                        
                    session['filename'] = filename
                    session['file_content'] = file_content
                    session['step'] = 2
                    
                    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–∞–ø–∫—É –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
                    if session['server_type'] in ['paper', 'purpur']:
                        session['folder'] = 'plugins'
                    elif session['server_type'] == 'fabric':
                        session['folder'] = 'mods'
                    else:
                        session['folder'] = 'plugins'
                    
                    embed = discord.Embed(
                        title="üîå –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–ª–∞–≥–∏–Ω–∞/–º–æ–¥–∞",
                        description=(
                            f"**–°–µ—Ä–≤–µ—Ä:** –ø–æ—Ä—Ç {session['port']}\n"
                            f"**–§–∞–π–ª:** {session['filename']}\n"
                            f"**–ü–∞–ø–∫–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è:** {session['folder']}\n\n"
                            "**–®–∞–≥ 2/2:** –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ '–æ—Ç–º–µ–Ω–∞'"
                        ),
                        color=discord.Color.blue()
                    )
                    await message.channel.send(embed=embed)
                    return
                    
                else:
                    await message.channel.send("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ JAR-—Ñ–∞–π–ª –∏–ª–∏ —É–∫–∞–∂–∏—Ç–µ URL")
                    return
                    
            elif session['step'] == 2:
                # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
                if message.content.lower() in ['–ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', '–æ–∫', 'yes', 'ok']:
                    file_data = {
                        'bytes': session['file_content'],
                        'filename': session['filename'],
                        'path': session['folder']
                    }
                    
                    result, status = await self.api_upload(f"/server_files/{session['port']}/upload", file_data)
                    
                    if status == 200:
                        embed = discord.Embed(
                            title="‚úÖ –ü–ª–∞–≥–∏–Ω/–º–æ–¥ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!",
                            description=(
                                f"**–§–∞–π–ª:** {session['filename']}\n"
                                f"**–°–µ—Ä–≤–µ—Ä:** –ø–æ—Ä—Ç {session['port']}\n"
                                f"**–ü–∞–ø–∫–∞:** {session['folder']}\n\n"
                                "–î–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞."
                            ),
                            color=discord.Color.green()
                        )
                    else:
                        embed = discord.Embed(
                            title="‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏",
                            description=f"–û—à–∏–±–∫–∞: {result.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}",
                            color=discord.Color.red()
                        )
                    
                    await message.channel.send(embed=embed)
                    del self.plugin_sessions[user_id]
                    return
                    
                else:
                    await message.channel.send("‚ùå –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞")
                    del self.plugin_sessions[user_id]
                    return
                
        await self.process_commands(message)

class ServerStatusCommand(app_commands.Command):
    def __init__(self):
        super().__init__(
            name="server_status",
            description="–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞",
            callback=self.callback,
            nsfw=False
        )
    
    async def callback(self, interaction: discord.Interaction, port: int):
        await interaction.response.defer(thinking=True)
        
        bot = interaction.client
        data, status = await bot.api_request(f"/api/server/status/{port}")
        
        if status == 200:
            status_text = "–ó–∞–ø—É—â–µ–Ω" if data['status'] == 'running' else "–û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
            status_emoji = "üü¢" if data['status'] == 'running' else "üî¥"
            
            embed = discord.Embed(
                title=f"{status_emoji} –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞ {port}",
                color=discord.Color.blue()
            )
            embed.add_field(name="–¢–∏–ø", value=data.get('server_type', 'vanilla'), inline=True)
            embed.add_field(name="–í–µ—Ä—Å–∏—è", value=data.get('version', 'N/A'), inline=True)
            embed.add_field(name="–°—Ç–∞—Ç—É—Å", value=status_text, inline=True)
            embed.add_field(name="–ü–∞–º—è—Ç—å", value=data.get('memory', '2G'), inline=True)
            embed.add_field(name="MOTD", value=data.get('motd', 'Minecraft Server'), inline=False)
            embed.add_field(name="–ú–∞–∫—Å. –∏–≥—Ä–æ–∫–æ–≤", value=str(data.get('max_players', 20)), inline=True)
            
            await interaction.followup.send(embed=embed)
        else:
            await interaction.followup.send(f"‚ùå –û—à–∏–±–∫–∞: {data.get('error', '–°–µ—Ä–≤–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω')}")

class ServerStartCommand(app_commands.Command):
    def __init__(self):
        super().__init__(
            name="server_start",
            description="–ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä",
            callback=self.callback,
            nsfw=False
        )
    
    async def callback(self, interaction: discord.Interaction, port: int):
        await interaction.response.defer(thinking=True)
        
        bot = interaction.client
        data, status = await bot.api_request(f"/start_server/{port}", "POST")
        
        if status == 200:
            embed = discord.Embed(
                title="üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è",
                description=f"–°–µ—Ä–≤–µ—Ä –Ω–∞ –ø–æ—Ä—Ç—É {port} –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...",
                color=discord.Color.green()
            )
            await interaction.followup.send(embed=embed)
        else:
            await interaction.followup.send(f"‚ùå –û—à–∏–±–∫–∞: {data.get('error', '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä')}")

class ServerStopCommand(app_commands.Command):
    def __init__(self):
        super().__init__(
            name="server_stop",
            description="–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä–≤–µ—Ä",
            callback=self.callback,
            nsfw=False
        )
    
    async def callback(self, interaction: discord.Interaction, port: int):
        await interaction.response.defer(thinking=True)
        
        bot = interaction.client
        data, status = await bot.api_request(f"/stop_server/{port}", "POST")
        
        if status == 200:
            embed = discord.Embed(
                title="üõë –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è",
                description=f"–°–µ—Ä–≤–µ—Ä –Ω–∞ –ø–æ—Ä—Ç—É {port} –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è...",
                color=discord.Color.orange()
            )
            await interaction.followup.send(embed=embed)
        else:
            await interaction.followup.send(f"‚ùå –û—à–∏–±–∫–∞: {data.get('error', '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä–≤–µ—Ä')}")

class ServerRestartCommand(app_commands.Command):
    def __init__(self):
        super().__init__(
            name="server_restart",
            description="–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä",
            callback=self.callback,
            nsfw=False
        )
    
    async def callback(self, interaction: discord.Interaction, port: int):
        await interaction.response.defer(thinking=True)
        
        bot = interaction.client
        # –°–Ω–∞—á–∞–ª–∞ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º
        stop_data, stop_status = await bot.api_request(f"/stop_server/{port}", "POST")
        
        if stop_status != 200:
            await interaction.followup.send(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ: {stop_data.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
            return
            
        # –ñ–¥–µ–º 5 —Å–µ–∫—É–Ω–¥
        await asyncio.sleep(5)
        
        # –ó–∞—Ç–µ–º –∑–∞–ø—É—Å–∫–∞–µ–º
        start_data, start_status = await bot.api_request(f"/start_server/{port}", "POST")
        
        if start_status == 200:
            embed = discord.Embed(
                title="üîÑ –°–µ—Ä–≤–µ—Ä –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω",
                description=f"–°–µ—Ä–≤–µ—Ä –Ω–∞ –ø–æ—Ä—Ç—É {port} —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω",
                color=discord.Color.green()
            )
            await interaction.followup.send(embed=embed)
        else:
            await interaction.followup.send(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ: {start_data.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")

class ServerListCommand(app_commands.Command):
    def __init__(self):
        super().__init__(
            name="server_list",
            description="–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤",
            callback=self.callback,
            nsfw=False
        )
    
    async def callback(self, interaction: discord.Interaction):
        await interaction.response.defer(thinking=True)
        
        bot = interaction.client
        data, status = await bot.api_request("/list_servers")
        
        if status == 200:
            servers = data.get('servers', [])
            
            if not servers:
                embed = discord.Embed(
                    title="üì≠ –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤",
                    description="–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—ã–π —Å–µ—Ä–≤–µ—Ä —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã `/server_create`",
                    color=discord.Color.blue()
                )
                await interaction.followup.send(embed=embed)
                return
                
            embed = discord.Embed(
                title="üìä –ê–∫—Ç–∏–≤–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä—ã",
                color=discord.Color.blue()
            )
            
            for server in servers:
                status_emoji = "üü¢" if server['status'] == 'running' else "üî¥"
                status_text = "–ó–∞–ø—É—â–µ–Ω" if server['status'] == 'running' else "–û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
                
                embed.add_field(
                    name=f"{status_emoji} –ü–æ—Ä—Ç {server['port']}",
                    value=(
                        f"**–¢–∏–ø:** {server['server_type']}\n"
                        f"**–í–µ—Ä—Å–∏—è:** {server['version']}\n"
                        f"**–°—Ç–∞—Ç—É—Å:** {status_text}\n"
                        f"**–ü–∞–º—è—Ç—å:** {server.get('memory', '2G')}"
                    ),
                    inline=True
                )
                
            await interaction.followup.send(embed=embed)
        else:
            await interaction.followup.send(f"‚ùå –û—à–∏–±–∫–∞: {data.get('error', '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤')}")

class ServerLogsCommand(app_commands.Command):
    def __init__(self):
        super().__init__(
            name="server_logs",
            description="–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞",
            callback=self.callback,
            nsfw=False
        )
    
    async def callback(self, interaction: discord.Interaction, port: int, lines: int = 10):
        await interaction.response.defer(thinking=True)
        
        bot = interaction.client
        data, status = await bot.api_request(f"/server_status/{port}")
        
        if status == 200:
            logs = data.get('logs', [])
            
            if not logs:
                await interaction.followup.send(f"üì≠ –ù–µ—Ç –ª–æ–≥–æ–≤ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –ø–æ—Ä—Ç—É {port}")
                return
                
            # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–æ–≥–æ–≤
            logs = logs[-lines:] if lines > 0 else logs
            logs_text = "\n".join(logs)
            
            # –ï—Å–ª–∏ –ª–æ–≥–∏ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–µ, —Ä–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —á–∞—Å—Ç–∏
            if len(logs_text) > 2000:
                logs_text = logs_text[-2000:]
                logs_text = "..." + logs_text
                
            embed = discord.Embed(
                title=f"üìã –õ–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞ {port}",
                description=f"```\n{logs_text}\n```",
                color=discord.Color.dark_gray()
            )
            embed.set_footer(text=f"–ü–æ–∫–∞–∑–∞–Ω–æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö {len(logs)} —Å—Ç—Ä–æ–∫")
            
            await interaction.followup.send(embed=embed)
        else:
            await interaction.followup.send(f"‚ùå –û—à–∏–±–∫–∞: {data.get('error', '–°–µ—Ä–≤–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω')}")

class ServerCommandCommand(app_commands.Command):
    def __init__(self):
        super().__init__(
            name="server_command",
            description="–í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ",
            callback=self.callback,
            nsfw=False
        )
    
    async def callback(self, interaction: discord.Interaction, port: int, command: str):
        await interaction.response.defer(thinking=True)
        
        bot = interaction.client
        data, status = await bot.api_request(
            f"/api/server/command/{port}", 
            "POST", 
            {"command": command}
        )
        
        if status == 200:
            embed = discord.Embed(
                title="‚úÖ –ö–æ–º–∞–Ω–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞",
                description=f"–ö–æ–º–∞–Ω–¥–∞ `{command}` –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ {port}",
                color=discord.Color.green()
            )
            await interaction.followup.send(embed=embed)
        else:
            await interaction.followup.send(f"‚ùå –û—à–∏–±–∫–∞: {data.get('error', '–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É')}")

class ServerCreateCommand(app_commands.Command):
    def __init__(self):
        super().__init__(
            name="server_create",
            description="–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞",
            callback=self.callback,
            nsfw=False
        )
    
    async def callback(self, interaction: discord.Interaction):
        user_id = interaction.user.id
        bot = interaction.client
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞ –ª–∏ —É–∂–µ —Å–µ—Å—Å–∏—è
        if user_id in bot.setup_sessions:
            await interaction.response.send_message(
                "‚ùå –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è —Å–µ—Å—Å–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏. –ó–∞–≤–µ—Ä—à–∏—Ç–µ –µ—ë —Å–Ω–∞—á–∞–ª–∞.",
                ephemeral=True
            )
            return
            
        # –ù–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é
        bot.setup_sessions[user_id] = {
            'step': 1,
            'port': None,
            'server_type': None,
            'version': None,
            'memory': '2G'
        }
        
        embed = discord.Embed(
            title="üéÆ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ Minecraft —Å–µ—Ä–≤–µ—Ä–∞",
            description=(
                "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞—Å—Ç–µ—Ä –Ω–∞—Å—Ç—Ä–æ–π–∫–∏!\n\n"
                "**–®–∞–≥ 1/4:** –£–∫–∞–∂–∏—Ç–µ –ø–æ—Ä—Ç –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞ (25565-26000):"
            ),
            color=discord.Color.blue()
        )
        embed.set_footer(text="–í–≤–µ–¥–∏—Ç–µ –ø–æ—Ä—Ç –≤ —á–∞—Ç –∏–ª–∏ '–æ—Ç–º–µ–Ω–∞' –¥–ª—è –æ—Ç–º–µ–Ω—ã")
        
        await interaction.response.send_message(embed=embed)

class ServerPluginsCommand(app_commands.Command):
    def __init__(self):
        super().__init__(
            name="server_plugins",
            description="–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø–ª–∞–≥–∏–Ω–æ–≤/–º–æ–¥–æ–≤ —Å–µ—Ä–≤–µ—Ä–∞",
            callback=self.callback,
            nsfw=False
        )
    
    async def callback(self, interaction: discord.Interaction, port: int):
        await interaction.response.defer(thinking=True)
        
        bot = interaction.client
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ä–≤–µ—Ä–µ
        server_data, status = await bot.api_request(f"/api/server/status/{port}")
        if status != 200:
            await interaction.followup.send(f"‚ùå –°–µ—Ä–≤–µ—Ä –Ω–∞ –ø–æ—Ä—Ç—É {port} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
            
        server_type = server_data.get('server_type', 'vanilla')
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–∞–ø–∫—É —Å –ø–ª–∞–≥–∏–Ω–∞–º–∏/–º–æ–¥–∞–º–∏
        if server_type in ['paper', 'purpur']:
            folder = 'plugins'
        elif server_type == 'fabric':
            folder = 'mods'
        else:
            folder = 'plugins'  # –ü–æ —É–º–æ–ª–æ–ª—á–∞–Ω–∏—é –¥–ª—è vanilla –∏ –¥—Ä—É–≥–∏—Ö
            
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
        files_data, files_status = await bot.api_request(f"/server_files/{port}?path={folder}")
        
        if files_status != 200:
            await interaction.followup.send(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–ª–∞–≥–∏–Ω–æ–≤: {files_data.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
            return
            
        files = files_data.get('files', [])
        jar_files = [f for f in files if f['name'].lower().endswith('.jar')]
        
        if not jar_files:
            embed = discord.Embed(
                title=f"üì¶ –ü–ª–∞–≥–∏–Ω—ã/–º–æ–¥—ã —Å–µ—Ä–≤–µ—Ä–∞ {port}",
                description=f"–í –ø–∞–ø–∫–µ `{folder}` –Ω–µ—Ç JAR-—Ñ–∞–π–ª–æ–≤",
                color=discord.Color.blue()
            )
            await interaction.followup.send(embed=embed)
            return
            
        embed = discord.Embed(
            title=f"üì¶ –ü–ª–∞–≥–∏–Ω—ã/–º–æ–¥—ã —Å–µ—Ä–≤–µ—Ä–∞ {port}",
            description=f"–ù–∞–π–¥–µ–Ω–æ {len(jar_files)} JAR-—Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ `{folder}`",
            color=discord.Color.blue()
        )
        
        # –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ –≥—Ä—É–ø–ø—ã –ø–æ 10 —Ñ–∞–π–ª–æ–≤ (–∏–∑-–∑–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è Discord –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª–µ–π)
        for i in range(0, len(jar_files), 10):
            group = jar_files[i:i+10]
            files_list = "\n".join([f"‚Ä¢ `{f['name']}` ({f['size'] // 1024} KB)" for f in group])
            embed.add_field(
                name=f"–§–∞–π–ª—ã {i//10 + 1}",
                value=files_list if files_list else "–ù–µ—Ç —Ñ–∞–π–ª–æ–≤",
                inline=False
            )
            
        await interaction.followup.send(embed=embed)

class ServerInstallPluginCommand(app_commands.Command):
    def __init__(self):
        super().__init__(
            name="server_install_plugin",
            description="–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–ª–∞–≥–∏–Ω–∞/–º–æ–¥–∞ –∏–∑ —Ñ–∞–π–ª–∞",
            callback=self.callback,
            nsfw=False
        )
    
    async def callback(self, interaction: discord.Interaction, port: int):
        user_id = interaction.user.id
        bot = interaction.client
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞
        server_data, status = await bot.api_request(f"/api/server/status/{port}")
        if status != 200:
            await interaction.response.send_message(
                f"‚ùå –°–µ—Ä–≤–µ—Ä –Ω–∞ –ø–æ—Ä—Ç—É {port} –Ω–µ –Ω–∞–π–¥–µ–Ω",
                ephemeral=True
            )
            return
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞ –ª–∏ —É–∂–µ —Å–µ—Å—Å–∏—è
        if user_id in bot.plugin_sessions:
            await interaction.response.send_message(
                "‚ùå –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è —Å–µ—Å—Å–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏. –ó–∞–≤–µ—Ä—à–∏—Ç–µ –µ—ë —Å–Ω–∞—á–∞–ª–∞.",
                ephemeral=True
            )
            return
            
        # –ù–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é
        bot.plugin_sessions[user_id] = {
            'step': 1,
            'port': port,
            'server_type': server_data.get('server_type', 'vanilla'),
            'filename': None,
            'file_content': None,
            'folder': None
        }
        
        embed = discord.Embed(
            title="üîå –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–ª–∞–≥–∏–Ω–∞/–º–æ–¥–∞",
            description=(
                f"**–°–µ—Ä–≤–µ—Ä:** –ø–æ—Ä—Ç {port}\n"
                f"**–¢–∏–ø:** {server_data.get('server_type', 'vanilla')}\n\n"
                "**–®–∞–≥ 1/2:** –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ JAR-—Ñ–∞–π–ª –ø–ª–∞–≥–∏–Ω–∞/–º–æ–¥–∞ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ URL —Å–∫–∞—á–∏–≤–∞–Ω–∏—è:\n"
                "(–∏–ª–∏ –ø—Ä—è–º–æ–π URL –∫ JAR-—Ñ–∞–π–ª—É)"
            ),
            color=discord.Color.blue()
        )
        embed.set_footer(text="–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–∞–π–ª –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ URL. –î–ª—è –æ—Ç–º–µ–Ω—ã –≤–≤–µ–¥–∏—Ç–µ '–æ—Ç–º–µ–Ω–∞'")
        
        await interaction.response.send_message(embed=embed)

class ServerRemovePluginCommand(app_commands.Command):
    def __init__(self):
        super().__init__(
            name="server_remove_plugin",
            description="–£–¥–∞–ª–∏—Ç—å –ø–ª–∞–≥–∏–Ω/–º–æ–¥ —Å —Å–µ—Ä–≤–µ—Ä–∞",
            callback=self.callback,
            nsfw=False
        )
    
    async def callback(self, interaction: discord.Interaction, port: int, filename: str):
        await interaction.response.defer(thinking=True)
        
        bot = interaction.client
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ä–≤–µ—Ä–µ
        server_data, status = await bot.api_request(f"/api/server/status/{port}")
        if status != 200:
            await interaction.followup.send(f"‚ùå –°–µ—Ä–≤–µ—Ä –Ω–∞ –ø–æ—Ä—Ç—É {port} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
            
        server_type = server_data.get('server_type', 'vanilla')
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–∞–ø–∫—É —Å –ø–ª–∞–≥–∏–Ω–∞–º–∏/–º–æ–¥–∞–º–∏
        if server_type in ['paper', 'purpur']:
            folder = 'plugins'
        elif server_type == 'fabric':
            folder = 'mods'
        else:
            folder = 'plugins'
            
        # –§–æ—Ä–º–∏—Ä—É–µ–º –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
        file_path = f"{folder}/{filename}"
        if not file_path.endswith('.jar'):
            file_path += '.jar'
            
        # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª
        delete_data = {'path': file_path}
        result, delete_status = await bot.api_request(f"/server_files/{port}/delete", "POST", delete_data)
        
        if delete_status == 200:
            embed = discord.Embed(
                title="‚úÖ –ü–ª–∞–≥–∏–Ω/–º–æ–¥ —É–¥–∞–ª–µ–Ω",
                description=f"–§–∞–π–ª `{filename}` —É–¥–∞–ª–µ–Ω —Å —Å–µ—Ä–≤–µ—Ä–∞ {port}",
                color=discord.Color.green()
            )
            await interaction.followup.send(embed=embed)
        else:
            await interaction.followup.send(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: {result.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")

class ServerPluginFromURLCommand(app_commands.Command):
    def __init__(self):
        super().__init__(
            name="server_plugin_url",
            description="–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–ª–∞–≥–∏–Ω/–º–æ–¥ –ø–æ –ø—Ä—è–º–æ–π —Å—Å—ã–ª–∫–µ",
            callback=self.callback,
            nsfw=False
        )
    
    async def callback(self, interaction: discord.Interaction, port: int, url: str):
        await interaction.response.defer(thinking=True)
        
        bot = interaction.client
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞
        server_data, status = await bot.api_request(f"/api/server/status/{port}")
        if status != 200:
            await interaction.followup.send(f"‚ùå –°–µ—Ä–≤–µ—Ä –Ω–∞ –ø–æ—Ä—Ç—É {port} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
            
        # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
        filename, file_content = await bot.download_file(url)
        
        if not filename or not file_content:
            await interaction.followup.send("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ URL –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
            return
            
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–∞–ø–∫—É –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
        server_type = server_data.get('server_type', 'vanilla')
        if server_type in ['paper', 'purpur']:
            folder = 'plugins'
        elif server_type == 'fabric':
            folder = 'mods'
        else:
            folder = 'plugins'
            
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª –Ω–∞ —Å–µ—Ä–≤–µ—Ä
        file_data = {
            'bytes': file_content,
            'filename': filename,
            'path': folder
        }
        
        result, upload_status = await bot.api_upload(f"/server_files/{port}/upload", file_data)
        
        if upload_status == 200:
            embed = discord.Embed(
                title="‚úÖ –ü–ª–∞–≥–∏–Ω/–º–æ–¥ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!",
                description=(
                    f"**–§–∞–π–ª:** {filename}\n"
                    f"**–°–µ—Ä–≤–µ—Ä:** –ø–æ—Ä—Ç {port}\n"
                    f"**–ü–∞–ø–∫–∞:** {folder}\n\n"
                    "–î–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞."
                ),
                color=discord.Color.green()
            )
            await interaction.followup.send(embed=embed)
        else:
            await interaction.followup.send(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: {result.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")

class HelpCommand(app_commands.Command):
    def __init__(self):
        super().__init__(
            name="help",
            description="–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º",
            callback=self.callback,
            nsfw=False
        )
    
    async def callback(self, interaction: discord.Interaction):
        embed = discord.Embed(
            title="üéÆ Minecraft Server Manager - –ü–æ–º–æ—â—å",
            description="–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Minecraft —Å–µ—Ä–≤–µ—Ä–∞–º–∏",
            color=discord.Color.blue()
        )
        
        commands_list = [
            ("/server_status <port>", "–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞ –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –ø–æ—Ä—Ç—É"),
            ("/server_start <port>", "–ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –ø–æ—Ä—Ç—É"),
            ("/server_stop <port>", "–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä–≤–µ—Ä –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –ø–æ—Ä—Ç—É"),
            ("/server_restart <port>", "–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –ø–æ—Ä—Ç—É"),
            ("/server_list", "–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤"),
            ("/server_create", "–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞"),
            ("/server_logs <port>", "–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞"),
            ("/server_command <port> <command>", "–í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"),
            ("/server_plugins <port>", "–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø–ª–∞–≥–∏–Ω–æ–≤/–º–æ–¥–æ–≤ —Å–µ—Ä–≤–µ—Ä–∞"),
            ("/server_install_plugin <port>", "–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–ª–∞–≥–∏–Ω–∞/–º–æ–¥–∞"),
            ("/server_plugin_url <port> <url>", "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–ª–∞–≥–∏–Ω/–º–æ–¥ –ø–æ –ø—Ä—è–º–æ–π —Å—Å—ã–ª–∫–µ"),
            ("/server_remove_plugin <port> <filename>", "–£–¥–∞–ª–∏—Ç—å –ø–ª–∞–≥–∏–Ω/–º–æ–¥ —Å —Å–µ—Ä–≤–µ—Ä–∞")
        ]
        
        for cmd, desc in commands_list:
            embed.add_field(name=cmd, value=desc, inline=False)
            
        embed.set_footer(text=f"–ü—Ä–µ—Ñ–∏–∫—Å —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥: {BOT_PREFIX}")
        await interaction.response.send_message(embed=embed)

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    if not DISCORD_TOKEN:
        print("‚ùå –û—à–∏–±–∫–∞: DISCORD_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        print("–î–æ–±–∞–≤—å—Ç–µ DISCORD_TOKEN=your_bot_token –≤ —Ñ–∞–π–ª .env")
        return
        
    bot = MinecraftBot()
    
    try:
        bot.run(DISCORD_TOKEN)
    except discord.LoginFailure:
        print("‚ùå –û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")

if __name__ == "__main__":
    main()